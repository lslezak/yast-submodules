#! /usr/bin/sh

# run the script relative to the script itself
cd "$(dirname "$0")" || exit 1

# read the target branch from the .gitmodules config file
TARGET_BRANCH=$(sed -n "0,/^[[:space:]]*branch[[:space:]]*=/s/^[[:space:]]*branch[[:space:]]*=[[:space:]]*\(.*\)/\1/p" .gitmodules)
echo "Target branch: $TARGET_BRANCH"

# command for updating the git checkout:
# - keep the current changes, stash them
# - reset the checkout to a clean state
# - fetch from remote
# - ensure the target branch is checked out
# - pull the upstream changes
UPDATE_CMD="git stash save && git reset --hard && \
git fetch --prune && git checkout -q $TARGET_BRANCH &&  \
git pull --rebase"

# find the nested git repositories
FIND_CMD="find . -maxdepth 2 -name .git -printf %h\0"

# check if GNU parallel is installed
if command -v parallel >/dev/null; then
   $FIND_CMD | \
    parallel -0 -j150% -n1 "cd {} && echo -e '\nUpdating directory: {}' && $UPDATE_CMD"
else
  echo "* INFO: install GNU parallel to avoid mixing STDOUT,"
  echo "* install it with 'sudo zypper install gnu_parallel'"
  echo

  $FIND_CMD | \
    xargs -0 -I% -P$(($(nproc) * 3 / 2)) -n1 bash -c "cd '%' && echo -e '\nUpdating directory: %' && $UPDATE_CMD"
fi
